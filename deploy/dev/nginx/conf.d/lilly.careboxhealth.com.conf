proxy_cache_path /tmp/nginx-lillyssr levels=1:2 keys_zone=lillyssr_zone:10m inactive=60m;
proxy_cache_key "$scheme$request_method$host$request_uri";

map $geoip2_data_country_code $country_route {
    default 0;
    ~AR     "es-AR";
    ~DE     "de-DE";
    ~ES     "es-ES";
    ~GB     "en-GB";
    ~IT     "it-IT";
    ~JP     "ja-JP";
    ~MX     "es-MX";
    ~PL     "pl-PL";
    ~US     "en-US";
    ~BR     "pt-BR";
    ~CA     "en-CA";
    ~AU     "en-AU";
}

map $request_uri $language_route {
    ~*de-de "de-DE";
    ~*en-gb "en-GB";
    ~*en-us "en-US";
    ~*es-ar "es-AR";
    ~*es-es "es-ES";
    ~*es-mx "es-MX";
    ~*es-us "es-US";
    ~*it-it "it-IT";
    ~*ja-jp "ja-JP";
    ~*pl-pl "pl-PL";
    ~*pt-br "pt-BR";
    ~*en-ca "en-CA";
    ~*fr-ca "fr-CA";
    ~*en-au "en-AU";
}

map $arg_ibrowsefrom $override_country_route {
    default 0;
    ~AR     "es-AR";
    ~DE     "de-DE";
    ~ES     "es-ES";
    ~GB     "en-GB";
    ~IT     "it-IT";
    ~JP     "ja-JP";
    ~MX     "es-MX";
    ~PL     "pl-PL";
    ~US     "en-US";
    ~BR     "pt-BR";
    ~CA     "en-CA";
    ~AU     "en-AU";
}

map $arg_ibrowsefrom $override_selector {
    ~*de-de "de-DE";
    ~*en-gb "en-GB";
    ~*en-us "en-US";
    ~*es-ar "es-AR";
    ~*es-es "es-ES";
    ~*es-mx "es-MX";
    ~*es-us "es-US";
    ~*it-it "it-IT";
    ~*ja-jp "ja-JP";
    ~*pl-pl "pl-PL";
    ~*pt-br "pt-BR";
    ~*en-ca "en-CA";
    ~*fr-ca "fr-CA";
    ~*en-au "en-AU";
}

server {
    http2 on;
    listen 443 ssl;

    http3 on;
    listen 443 quic reuseport;

    add_header Alt-Svc  'h3=":$server_port"; ma=3600, h2=":$server_port"; ma=3600';
    add_header Alt-Svc  'h2=":$server_port"; ma=2592000; persist=1';
    add_header Alt-Svc  'h2=":$server_port"; ma=2592000;';

    server_name dev-lilly-preview.careboxhealth.com;

    ssl_certificate      /etc/nginx/ssl/star.careboxhealth.com.crt;
    ssl_certificate_key  /etc/nginx/ssl/star.careboxhealth.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;

    access_log /dev/stdout main;
    error_log  /dev/stdout;

    location = /favicon.ico {
        root /usr/share/nginx/html/global/;
        log_not_found off;
        access_log off;
    }

    root /usr/share/nginx/html/;
    index index.html;

    error_page 500 /error500.html;
    location = /error500.html {
        root /usr/share/nginx/html/;
    #    internal;
    }

    location = /robots.txt {
        root /usr/share/nginx/html/;
    }

    set $extra_args "";
    if ($args) {
        set $extra_args ?$args;
    }

    set $trimmed_request_uri $request_uri;
    if ($request_uri ~* "^(.*)/(\?|\?.*)?$") {
        set $trimmed_request_uri $1;
    }

    location ~* \.(bmp|css|ico|jpeg|jpg|js|png|svg|txt|webp|woff(2)?)$ {
        rewrite ^/(en-US|es-ES|ja-JP|es-US|es-AR|es-MX|pl-PL|en-GB|de-DE|it-IT|pt-BR|en-CA|fr-CA|en-AU)?(\/)?(.*)$ /global/$3 break;
        add_header X-Route "static-files";
        root /usr/share/nginx/html/;
        expires 1y;
        add_header Cache-Control "public";
        access_log off;
    }

    location = / {
        alias /usr/share/nginx/html/global/;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
        index index.html;
        try_files $uri$args @redirect;
    }


    location ~* ^/(en-US|es-ES|ja-JP|es-US|es-AR|es-MX|pl-PL|en-GB|de-DE|it-IT|pt-BR|en-CA|fr-CA|en-AU) {
        set $current_language $language_route;
        if ($trimmed_request_uri != $request_uri) {
            return 301 $scheme://$host$trimmed_request_uri$extra_args;
        }

        try_files $uri$args  @prerender_languages;
    }

    location @redirect {
        proxy_set_header X-Prerender-Token hf2oc8mgp0BOKZ8BdQum;

        root /usr/share/nginx/html/global/;

        set $prerender 0;
        set $redirect 0;

        if ($http_user_agent ~* "googlebot|bingbot|yandex|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest\/0\.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp|AdsBot-Google-Mobile|AdsBot-Google|AdsBot|adsbot-google|DuckDuckBot|applebot|Slurp|AOL|Ask Jeeves|Teoma|AdIdxBot|BingPreview|APIs-Google|Mediapartners-Google|Googlebot-Image|Googlebot-News|Googlebot-Video|Google-Read-Aloud|Storebot-Google|googleweblight|DuplexWeb-Google|Screaming Frog SEO Spider") {
            set $prerender 1;
            set $redirect 3;
            set $country_route 0;
        }
        if ($args ~ "_escaped_fragment_") {
            set $prerender 1;
            set $redirect 3;
        }

        if ($country_route != 0) {
            set $redirect 1;
        }

        if ($http_user_agent ~ "Prerender") {
            set $prerender 0;
            set $redirect 0;
        }

        if ($uri ~* "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
            set $prerender 0;
            set $redirect 0;
        }

        if ($redirect = 1) {
            add_header X-GeoCountry $geoip2_data_country_name;
            return 301 $scheme://$host/$country_route$request_uri;
        }

        #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
        resolver 8.8.8.8;

        if ($prerender = 1) {
            set $redirect 3;
            add_header X-Pretender-Cache "true";
            #setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
            set $prerender "service.prerender.io";
            rewrite .* /$scheme://$host$request_uri? break;
                proxy_pass http://$prerender;
        }

        if ($redirect = 0) {
            add_header Cache-Control "no-store, no-cache, must-revalidate";
            add_header X-GeoCountry $geoip2_data_country_name;
            add_header X-GeoCode $geoip2_data_country_code;
            add_header X-GeoCity $geoip2_data_city_name;
            add_header X-GeoTimeZone $geoip2_data_time_zone;
            add_header X-Frame-Options sameorigin always;
            add_header X-Redirect $redirect;
            add_header X-Route "default";
            return 301 $scheme://$host/en-US$trimmed_request_uri;
            # rewrite .* /index.html break;
        }
    }

    # location /assets/ {
    #     alias /usr/share/nginx/html/global/assets/;
    #     expires 1y;
    #     add_header Cache-Control "public";
    #     access_log off;
    # }





    location @prerender_languages {
        proxy_set_header X-Prerender-Token hf2oc8mgp0BOKZ8BdQum;

        root /usr/share/nginx/html/global/;

        set $prerender 0;
        if ($http_user_agent ~* "googlebot|bingbot|yandex|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest/0.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp|AdsBot-Google-Mobile|AdsBot-Google|AdsBot|adsbot-google|DuckDuckBot|applebot|Slurp|AOL|Ask Jeeves|Teoma|AdIdxBot|BingPreview|APIs-Google|Mediapartners-Google|Googlebot-Image|Googlebot-News|Googlebot-Video|Google-Read-Aloud|Storebot-Google|googleweblight|DuplexWeb-Google|Screaming Frog SEO Spider|MSNBot|AdsBot-Google|YandexBot|YandexMobileBot|Slurp") {
            set $prerender 1;
        }
        if ($args ~ "_escaped_fragment_") {
            set $prerender 1;
        }
        if ($http_user_agent ~ "Prerender") {
            set $prerender 0;
        }
        if ($uri ~* "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
            set $prerender 0;
        }

        #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
        resolver 8.8.8.8;

        if ($prerender = 1) {
            add_header X-Pretender-Cache "true";
            #setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
            set $prerender "service.prerender.io";
            rewrite .* /$scheme://$host$request_uri? break;
            proxy_pass http://$prerender;
        }
        if ($prerender = 0) {
            add_header Cache-Control "no-store, no-cache, must-revalidate";
            add_header X-Route "language";
            add_header X-GeoCountry $geoip2_data_country_name;
            add_header X-GeoCode $geoip2_data_country_code;
            add_header X-GeoCity $geoip2_data_city_name;
            add_header X-GeoTimeZone $geoip2_data_time_zone;
            add_header X-Frame-Options sameorigin always;
            rewrite .* /index-$current_language.html break;
        }
    }

    location /version {
        alias /usr/share/nginx/html;
        index version.html;
        add_header Cache-Control max-age=0;
        add_header Cache-Control no-cache;
    }

    location /healthcheck {
        return 200 "OK";
        access_log off;
    }

    location ~ ^/ext {
        rewrite ^/ext(.*)$ /customers/lilly21/redirect$1 break;
        proxy_set_header X-GeoCountry $geoip2_data_country_name;
        proxy_set_header X-GeoCode $geoip2_data_country_code;
        proxy_set_header X-GeoCity $geoip2_data_city_name;
        proxy_set_header X-GeoTimeZone $geoip2_data_time_zone;
        proxy_set_header X-UserAgent $http_user_agent;
        proxy_pass http://service-redirect-manager;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
    }

    location ~ ^/(app|customers) {
        add_header X-GeoCountry $geoip2_data_country_name;
        add_header X-GeoCode $geoip2_data_country_code;
        add_header X-GeoCity $geoip2_data_city_name;
        add_header X-GeoTimeZone $geoip2_data_time_zone;
        proxy_pass  http://app-webapp;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;
        proxy_connect_timeout       60s;
        proxy_send_timeout          60s;
        proxy_read_timeout          60s;
        send_timeout                60s;
    }

    location ~ ^/(login) {
        rewrite ^/login/(.*)$ /$1 break;
        proxy_pass  http://app-auth;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;
    }

    location ~ ^/(lang) {
        add_header X-GeoCountry $geoip2_data_country_name;
        add_header X-GeoCode $geoip2_data_country_code;
        add_header X-GeoCity $geoip2_data_city_name;
        add_header X-GeoTimeZone $geoip2_data_time_zone;
        rewrite ^/lang/assets/(.*)$ /assets/$1 break;
        proxy_pass  http://service-localization;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;
        proxy_connect_timeout       60s;
        proxy_send_timeout          60s;
        proxy_read_timeout          3600s;
        send_timeout                60s;
    }

    location ~ ^/(translate) {
        add_header X-GeoCountry $geoip2_data_country_name;
        add_header X-GeoCode $geoip2_data_country_code;
        add_header X-GeoCity $geoip2_data_city_name;
        add_header X-GeoTimeZone $geoip2_data_time_zone;
        rewrite ^/translate/(.*)$ /admin/v1/$1 break;
        proxy_pass  http://app-studiescenter;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_http_version 1.1;
        proxy_connect_timeout       60s;
        proxy_send_timeout          60s;
        proxy_read_timeout          60s;
        send_timeout                60s;
    }
    
    location ~ ^/(configuration) {
        add_header X-GeoCountry $geoip2_data_country_name;
        add_header X-GeoCode $geoip2_data_country_code;
        add_header X-GeoCity $geoip2_data_city_name;
        add_header X-GeoTimeZone $geoip2_data_time_zone;
        rewrite ^/configuration/(.*)$ /configuration/v1/$1 break;
        proxy_pass  http://app-studiescenter;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_http_version 1.1;
        proxy_connect_timeout       60s;
        proxy_send_timeout          60s;
        proxy_read_timeout          60s;
        send_timeout                60s;
    }

    location ~ ^/(web|anonymous) {
        add_header X-GeoCountry $geoip2_data_country_name;
        add_header X-GeoCode $geoip2_data_country_code;
        add_header X-GeoCity $geoip2_data_city_name;
        add_header X-GeoTimeZone $geoip2_data_time_zone;
        proxy_pass  http://app-studiescenter;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;
        proxy_connect_timeout       60s;
        proxy_send_timeout          60s;
        proxy_read_timeout          60s;
        send_timeout                60s;
    }

    location ~ ^/(fullsuite) {
        add_header X-GeoCountry $geoip2_data_country_name;
        add_header X-GeoCode $geoip2_data_country_code;
        add_header X-GeoCity $geoip2_data_city_name;
        add_header X-GeoTimeZone $geoip2_data_time_zone;
        rewrite ^/fullsuite/(.*)$ /$1 break;
        proxy_pass  http://internal-fs-servers;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host "preview.emergingmed.com";
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;
        proxy_connect_timeout       60s;
        proxy_send_timeout          60s;
        proxy_read_timeout          60s;
        send_timeout                60s;
    }
}
