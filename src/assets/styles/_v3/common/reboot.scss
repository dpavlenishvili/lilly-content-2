@use '_v3/calc' as calc;
// stylelint-disable declaration-no-important, selector-no-qualifying-type, property-no-vendor-prefix


// Reboot
//
// Normalization of HTML elements, manually forked from Normalize.css to remove
// styles targeting irrelevant browsers while applying new styles.
//
// Normalize is licensed MIT. https://github.com/necolas/normalize.css


// Document
//
// Change from `box-sizing: content-box` so that `width` is not affected by `padding` or `border`.

*,
*::before,
*::after {
  box-sizing: border-box;
}


// Root
//
// Ability to the value of the root font sizes, affecting the value of `rem`.
// null by default, thus nothing is generated.


:root {
  @if calc.$font-size-root != null {
    font-size: var(--#{calc.$cb}root-font-size);
  }

  @if calc.$enable-smooth-scroll {
    @media (prefers-reduced-motion: no-preference) {
      scroll-behavior: auto;
    }
  }
}

html {
  scroll-behavior: auto;
  -webkit-text-size-adjust: 100%;
}

html, body {
  height: 100%;
}

// Body
//
// 1. Remove the margin in all browsers.
// 2. As a best practice, apply a default `background-color`.
// 3. Prevent adjustments of font size after orientation changes in iOS.
// 4. Change the default tap highlight to be completely transparent in iOS.

// scss-docs-start reboot-body-rules
body {
  margin: 0; // 1
  font-family: var(--#{calc.$cb}body-font-family);
  @include calc.font-size(var(--#{calc.$cb}body-font-size));
  font-weight: var(--#{calc.$cb}body-font-weight);
  line-height: var(--#{calc.$cb}body-line-height);
  color: var(--#{calc.$cb}body-clr);
  text-align: var(--#{calc.$cb}body-text-align);
  background-color: var(--#{calc.$cb}body-bg-clr); // 2
  -webkit-text-size-adjust: 100%; // 3
  -webkit-tap-highlight-color: rgba(calc.$black, 0); // 4

  min-height: 100dvh;
  flex-direction: column !important;
  display: flex;
  scrollbar-width: thin;
  //overflow-x: hidden;

  & > .app-root, & > app-root {
    flex: 1 0 auto;

    & > *:first-child, & > .app-serve-main {
      &.hidden {
        display: none !important;
        position: absolute;
        top: 0;
        left: 0;
      }

      height: 100%;
      flex-direction: column !important;
      display: flex;

      .main-content {
        flex: 1 0 auto;
      }
    }
  }
}

p {
  margin-top: 0;
  margin-bottom: var(--#{calc.$cb}paragraph-margin-bottom, 1rem);
}


// Strong
//
// Add the correct font weight in Chrome, Edge, and Safari

b,
strong {
  font-weight: var(--#{calc.$cb}font-weight-bolder, 700);
}

// Small
//
// Add the correct font size in all browsers

small {
  @include calc.font-size(var(--#{calc.$cb}small-font-size, .75rem));
}

// Sub and Sup
//
// Prevent `sub` and `sup` elements from affecting the line height in
// all browsers.

sub,
sup {
  position: relative;
  @include calc.font-size(var(--#{calc.$cb}sub-sup-font-size, .75em));
  line-height: 0;
  vertical-align: baseline;
}

sub {
  bottom: -.25em;
}

sup {
  top: -.5em;
}

.theme-dark {
  color: var(--#{calc.$cb}white, #ffffff);
}


// Links

a {
  cursor: pointer;
  color: var(--#{calc.$cb}link-clr);
  font-weight: var(--#{calc.$cb}link-weight);
  text-decoration: var(--#{calc.$cb}link-decoration);
  text-underline-offset: 24%;
  text-decoration-thickness: 4%;

  &:hover, &:focus, &:focus-visible {
    --#{calc.$cb}link-clr: var(--#{calc.$cb}link-hover-clr);
    text-decoration: var(--#{calc.$cb}link-hover-decoration);
  }


}

.link--1 {
  --#{calc.$cb}link-clr: var(--#{calc.$cb}link-1-clr);
  --#{calc.$cb}link-hover-clr: var(--#{calc.$cb}link-1-clr);
}


.text-primary {
  color: var(--#{calc.$cb}primary);
}


// Hidden attribute
//
// Always hide an element with the `hidden` HTML attribute.

[hidden] {
  display: none !important;
}
fieldset {
  padding: 0; margin: 0; border: none;
}

@media print {
  .d-no-print {
    display: none !important;
  }
}
