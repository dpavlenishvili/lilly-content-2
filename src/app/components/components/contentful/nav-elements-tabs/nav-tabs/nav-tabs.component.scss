@use "_v3/calc" as calc;

$h: '' !default;
$init: (
        show-desktop-only: (media-query-up: (
                xs: none,
                lg: block,
        )),
        show-mobile-only: (media-query-up: (
                xs: block,
                lg: none,
        )),
) !default;

::ng-deep :root {
  @include calc.css-initVars($init, $h);
}

.nav-blog {
  position: relative;
  margin-top: 0.5rem;

  .tab {
    min-width: fit-content;

    &:hover {
      border-bottom: 0.313rem solid var(--page-color) !important;

      span {
        color: var(--page-color);
      }
    }
  }

  .nav-cont-elements {
    height: 3.75rem;
    span {
      opacity: 1;
    }

    .tabs {
      width: 100%;
      position: relative;

      .tab:last-of-type {

        span {
          position: relative;

          &:before {
            content: "";
            width: 1px;
            height: 70%;
            background: #ddd;
            position: absolute;
            left: -1rem;
            top: 40%;
            transform: translateY(-50%);
          }
        }
      }
    }
  }
}

.mat-mdc-form-field ::ng-deep {
  width: 100%;

  input {
    font-size: 30px;
  }
  /*TODO(mdc-migration): The following rule targets internal classes of form-field that may no longer apply for the MDC version.*/
  .mat-form-field-flex {
    background-color: #fcfcfc !important;
  }

  .mat-icon {
    position: relative;
    transform: rotate(45deg);
  }

  button {
    background: transparent;
    border: transparent;
  }
}

.mat-icon {
  height: 100%;
  position: relative;
  top: -0.2rem;
  @include calc.media-breakpoint-down(sm) {
    top: 0.2rem;
  }

  &:hover {
    color: var(--page-color);
    cursor: pointer;
  }
}

.nav--tabs {
  .nav--tabs__container.show-desktop-only {
    display: var(--#{$h}show-desktop-only);
  }

  .show-mobile-only {
    display: var(--#{$h}show-mobile-only);

  }

  .form-group {
    width: 100%;
  }
}
