@use "_v3/calc" as calc;

$h: '' !default;

$init: (
        form-grid-areas: (media-query-up: (
                xs: '"f f" "s b" "r r"',
                lg: '"f s b" "r r r"',
        )),
        form-grid-columns: (media-query-up: (
                xs: 1fr auto,
                lg: minmax(200px, 1fr) minmax(12rem, 18.125rem) auto,
        )),
        form-gap-x: (media-query-up: (
                xs: var(--#{calc.$cb}space-100),
                lg: var(--#{calc.$cb}space-150),
        )),
        form-gap-y: (media-query-up: (
                xs: var(--#{calc.$cb}space-200),
                lg: var(--#{calc.$cb}space-250),
        )),
        tag-font-size: (media-query-up: (
                xs: .857em,
                lg: 1em,
        )),
        cst-header-gap: (media-query-up: (
                xs: var(--#{calc.$cb}space-800),
                lg: calc(var(--#{calc.$cb}cst-offset-y) * 2),
        )),
        block--header-offset-y: (media-query-up: (
                xs: var(--#{calc.$cb}space-400),
                lg: var(--#{calc.$cb}space-800),
        )),
        title-font-size: (media-query-up: (
                xs: var(--#{calc.$cb}font-size-250),
                lg: var(--#{calc.$cb}font-size-625),
        )),
) !default;

:host {
  @include calc.css-initVars($init, $h);
  ::ng-deep {


    .cst.cst--blog {
      --#{calc.$cb}cst-header-gap: var(--#{$h}cst-header-gap);

      .block--header{
        --#{calc.$cb}block-offset-y: var(--#{$h}block--header-offset-y);
      }

      h1.title {
        --#{calc.$cb}cst-title-align: start;
        font-size: var(--#{$h}title-font-size);
      }

      .nav--tabs {
        display: block;

        &__container {

          &, & > * {
            display: block;
            width: 100%;
          }
        }

        &__content {
          justify-content: space-between;
        }
      }


      .desktop {
        display: block;
      }

      .mobile {
        display: none;
      }
    }


    .cb-form {
      display: grid;
      grid-template-areas: var(--#{$h}form-grid-areas);
      grid-template-columns: var(--#{$h}form-grid-columns);
      gap: var(--#{$h}form-gap-y) var(--#{$h}form-gap-x);

      .form-group {
        &--search {
          grid-area: f;
        }

        &--sorting {
          grid-area: s;
        }

        &--submit {
          grid-area: b;
          display: grid;
          align-items: end;
        }

        &--refs {
          grid-area: r;
        }
      }

      > * {
        min-width: 0;
      }

      .cb-tag--archive.is-base {
        --#{calc.$tag}fg: var(--#{calc.$color}neutral-base-080);
        --#{calc.$tag}font-size: var(--#{$h}tag-font-size);

        .mat-icon {
          @include calc.square(1.25rem);
          color: var(--#{calc.$color}neutral-base-060);
        }

        .mdc-form-field > label {
          margin-left: var(--#{calc.$tag}offset-x);
          color: var(--#{calc.$color}neutral-base-060);
        }
      }
    }

    .form--filters.cb-main-filters {

      #{calc.$btn-selector} {
        &.mdc-icon-button.btn--submit {
          --#{calc.$btn}icon-button-size: var(--#{calc.$mdf}lg-min-height);
          border-radius: var(--#{calc.$mdf}lg-radius);
          color: var(--#{calc.$color}neutral-base-060);
          @include calc.btn-mixins-button-override($overrides: (
                  bg: var(--#{calc.$mdf}filled-bg),
                  hover: (
                          bg: var(--#{calc.$mdf}active-filled-bg),
                  )
          ));
        }
      }
    }

    .show-more {
      font-size: var(--#{calc.$cb}font-size-125);
    }

    mat-select {
      color: var(--#{calc.$color}neutral-base-060);
    }
    
    input::placeholder {
      font-style: italic;
    }

  }
}
